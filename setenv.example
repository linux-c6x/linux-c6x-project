# This file should be sourced (not run) into your shell to put the linux-c6x project in context
# example:
# /home/user/my-prj/linux-c6x-project$ source setenv

# Stuff that will often change from machine to machine
export LINUX_C6X_TOP_DIR=@TOP_DIR@
export TI_CG6X_DIR=$LINUX_C6X_TOP_DIR/cg6x

# Choose kernels to build
# This is a space-separated list of kernels to build. The names used are
# used to include a kbuilds/<name>.mk makefile fragment from the top-level
# Makefile.
#
export KERNELS_TO_BUILD="dsk6455 evmc6472"

# This is a space-separated list of kernels to build after everything else has built
# This is for variants of the main kernels. Variants which have minor differences in
# config or commandline compared to a kernel in KENRELS_TO_BUILD. This is used for
# initramfs variants, for example.
#
export EXTRA_KERNELS_TO_BUILD="dsk6455-initramsfs dsk6455-romfs evmc6472-initramfs evmc6472-romfs"

# Kernel build to use for kernel headers
#
# Headers do not change based on board or endian, so pick one kernel
# build and endian to use for kernel headers.
#
export KERNEL_HEADERS_KERNEL=dsk6455
export KERNEL_HEADERS_ENDIAN=little

# Choices for config

export ROOTFS=min-root

# 'little' or 'big' for single endianess. Leave blank or undefined to build
# both endians
export ENDIAN=little

export ABI=elf

# size of DSBT table (only used for SDK0 builds)
export DSBT_SIZE=64

# These should not normaly have to be modified
# Values are calculated from setenv values or constant
export PRODUCT_DIR=$LINUX_C6X_TOP_DIR/product
export SDK0_DIR=$LINUX_C6X_TOP_DIR/sdk0
export SDK_DIR=$LINUX_C6X_TOP_DIR/sdk
export LINUX_C6X_PROJECT_DIR=$LINUX_C6X_TOP_DIR/linux-c6x-project
export LINUX_C6X_KERNEL_DIR=$LINUX_C6X_TOP_DIR/linux-2.6
export SHELL=/bin/bash 

# If you are building sdk0 you must use a 3.x gcc version
# Otherwise 3.x and 4.x should work
#export HOSTCC=gcc-3.4
export HOSTCC=gcc

# project make file will manage the correct SDK choice for the right component.  
# Here we must set a default to use for makes outside of the top level make
export CROSS_COMPILE=$SDK_DIR/bin/c6x-linux-
export CROSS=$CROSS_COMPILE

# project make file will manage the correct setting for ARCH
# Here we set it for direct builds of the kernel
export ARCH=c6x 
