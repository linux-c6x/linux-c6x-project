######################### TOP LEVEL Makefile for SysLink ########################

# SysLink kernel samples to build
SYSLINK_KERNEL_SAMPLES_TO_BUILD ?= notify gateMP heapBufMP heapMemMP listMP messageQ sharedRegion
# SysLink user land samples to build
SYSLINK_USER_SAMPLES_TO_BUILD ?= procMgr $(SYSLINK_KERNEL_SAMPLES_TO_BUILD)

KDIR=$(LINUX_C6X_TOP_DIR)/Build/kobjs/${SYSLINK_TO_BUILD}${ENDIAN_SUFFIX}
SYSLINK_INSTALL=syslink_${SYSLINK_TO_BUILD}${ENDIAN_SUFFIX}
ifeq ($(SYSLINK_TO_BUILD),evmc6472)
# SysLink build platform
SYSLINK_PLATFORM=C6472
# IPC build platform
IPC_PLATFORM=evm6472
else
ifeq ($(SYSLINK_TO_BUILD),evmc6474)
SYSLINK_PLATFORM=C6474
IPC_PLATFORM=evm6474
else
ifeq ($(SYSLINK_TO_BUILD),evmc6474-lite)
SYSLINK_PLATFORM=C6474
IPC_PLATFORM=evm6474
endif
endif
endif

ifeq ($(ENDIAN),little)
IPC_TARGET=C64P_COFF
else
IPC_TARGET=C64P_COFF_big_endian
endif

syslink-help:
	@echo "First edit and source setenv for SysLink variables"
	@echo
	@echo "Following SysLink targets available:-"
	@echo "syslink-kernel - for building syslink and sample kernel modules"
	@echo "syslink-user - for building syslink library and user land samples"
	@echo "syslink-all - build all targets"
	@echo "syslink-kernel-clean - clean kernel and sample modules"
	@echo "syslink-user-clean - clean user land and sample exe files"
	@echo "syslink-clean - clean all targets"
	@echo
	@echo "syslink files are installed under product/<platform>/"

syslink-kernel:
ifeq ($(SYSLINK_PLATFORM),)
	@echo "No SYSLINK_PLATFORM defined"; \
	false;
endif
	if [ ! -d $(SYSLINK_ROOT) ] ; then echo "Install SysLink before build"; false ; fi
	if [ ! -d $(IPC_DIR) ] ; then echo "Install IPC package before build"; false ; fi

	@if [ "$(BUILD_KERNEL_WITH_GCC)" = "yes" ] ; then \
		echo "building syslink kernel module using gcc"; \
		(cd $(SYSLINK_ROOT)/ti/syslink/utils/hlos/knl/Linux; \
		make ARCH=c6x CROSS_COMPILE=$(CC_GNU) SYSLINK_PLATFORM=$(SYSLINK_PLATFORM) \
		KDIR=$(KDIR) IPC_DIR=$(IPC_DIR)); \
	else \
		echo "building syslink kernel module using cgt"; \
		(cd $(SYSLINK_ROOT)/ti/syslink/utils/hlos/knl/Linux; \
		make ARCH=c6x CROSS_COMPILE=$(CC_SDK0) SYSLINK_PLATFORM=$(SYSLINK_PLATFORM) \
		TI_COMPILER="yes" KDIR=$(KDIR) IPC_DIR=$(IPC_DIR)); \
	fi

# build all kernel sample modules
	for module_name in $(SYSLINK_KERNEL_SAMPLES_TO_BUILD) ; do \
		if [ "$(BUILD_KERNEL_WITH_GCC)" = "yes" ] ; then \
			echo building $$module_name; \
			(cd $(SYSLINK_ROOT)/ti/syslink/samples/hlos/$$module_name/knl/Linux; \
			make ARCH=c6x CROSS_COMPILE=$(CC_GNU) SYSLINK_PLATFORM=$(SYSLINK_PLATFORM) \
			KDIR=$(KDIR) IPC_DIR=$(IPC_DIR)) \
		else \
			echo building $$module_name; \
			(cd $(SYSLINK_ROOT)/ti/syslink/samples/hlos/$$module_name/knl/Linux; \
			make ARCH=c6x CROSS_COMPILE=$(CC_SDK0) SYSLINK_PLATFORM=$(SYSLINK_PLATFORM) \
			TI_COMPILER="yes" KDIR=$(KDIR) IPC_DIR=$(IPC_DIR)) \
		fi \
	done;
	
syslink-user:
	if [ ! -d $(SYSLINK_ROOT) ] ; then echo "Install SysLink before build"; false ; fi
	if [ ! -d $(IPC_DIR) ] ; then echo "Install IPC package before build"; false ; fi

	@echo "building user syslink library"
	@if [ "$(BUILD_USERSPACE_WITH_GCC)" = "yes" ] ; then \
		(cd $(SYSLINK_ROOT)/ti/syslink/utils/hlos/usr/Linux; \
		make TOOLCHAIN_PREFIX=$(CC_GNU) SYSLINK_PLATFORM=$(SYSLINK_PLATFORM) \
		KDIR=$(KDIR) IPC_DIR=$(IPC_DIR) ENDIAN=$(ENDIAN)) \
	else \
		(cd $(SYSLINK_ROOT)/ti/syslink/utils/hlos/usr/Linux; \
		make TOOLCHAIN_PREFIX=$(CC_SDK) SYSLINK_PLATFORM=$(SYSLINK_PLATFORM) \
		KDIR=$(KDIR) IPC_DIR=$(IPC_DIR)) \
	fi

	for module_name in $(SYSLINK_USER_SAMPLES_TO_BUILD) ; do \
		if [ "$(BUILD_USERSPACE_WITH_GCC)" = "yes" ] ; then \
			echo building $$module_name; \
			(cd $(SYSLINK_ROOT)/ti/syslink/samples/hlos/$$module_name/usr/Linux; \
			make TOOLCHAIN_PREFIX=$(CC_GNU) SYSLINK_PLATFORM=$(SYSLINK_PLATFORM) \
			KDIR=$(KDIR) IPC_DIR=$(IPC_DIR) ENDIAN=$(ENDIAN)) \
		else \
			echo building $$module_name; \
			(cd $(SYSLINK_ROOT)/ti/syslink/samples/hlos/$$module_name/usr/Linux; \
			make TOOLCHAIN_PREFIX=$(CC_SDK) SYSLINK_PLATFORM=$(SYSLINK_PLATFORM) \
			TI_COMPILER="yes" KDIR=$(KDIR) IPC_DIR=$(IPC_DIR)) \
		fi \
	done	

syslink-rtos:
	# must match with the patters in $SYSLINK_ROOT/config.bld
	(cd $(SYSLINK_ROOT); IPC_PLATFORM=$(IPC_PLATFORM) IPC_TARGET=$(IPC_TARGET) $(XDC_DIR)/xdc all XDCBUILDCFG="${SYSLINK_ROOT}/config.bld" -PR . )

syslink-rtos-clean:
	(cd $(SYSLINK_ROOT); IPC_PLATFORM=$(IPC_PLATFORM) IPC_TARGET=$(IPC_TARGET) $(XDC_DIR)/xdc clean XDCBUILDCFG="${SYSLINK_ROOT}/config.bld" -PR . ;)
	if [ "$(ENDIAN)" == "little" ]; then \
		rm -rf $(PRODUCT_DIR)/$(SYSLINK_INSTALL)/*.x64P ; \
	else \
		rm -rf $(PRODUCT_DIR)/$(SYSLINK_INSTALL)/*.x64Pe ; \
	fi

syslink-rtos-install:
	[ -d $(PRODUCT_DIR) ] || echo "no product directory"
	[ -d $(PRODUCT_DIR)/$(SYSLINK_INSTALL) ] || mkdir -p $(PRODUCT_DIR)/$(SYSLINK_INSTALL)
	if [ "$(SYSLINK_PLATFORM)" = "C6474" ] ; then \
		if [ "$(ENDIAN)" == "little" ]; then \
			(cd $(SYSLINK_ROOT); cp `find . -name *c6474*x64P` $(PRODUCT_DIR)/$(SYSLINK_INSTALL)/; ) \
		else \
			(cd $(SYSLINK_ROOT); cp `find . -name *c6474*x64Pe` $(PRODUCT_DIR)/$(SYSLINK_INSTALL)/; ) \
		fi \
	else \
		if [ "$(ENDIAN)" == "little" ]; then \
			(cd $(SYSLINK_ROOT); cp `find . -name *c6472*x64P` $(PRODUCT_DIR)/$(SYSLINK_INSTALL)/; ) \
		else \
			(cd $(SYSLINK_ROOT); cp `find . -name *c6472*x64Pe` $(PRODUCT_DIR)/$(SYSLINK_INSTALL)/; ) \
		fi \
	fi

syslink-all:syslink-kernel syslink-user syslink-rtos syslink-install syslink-rtos-install

syslink-install:
	[ -d $(PRODUCT_DIR) ] || echo "no product directory"
	[ -d $(PRODUCT_DIR)/$(SYSLINK_INSTALL) ] || mkdir -p $(PRODUCT_DIR)/$(SYSLINK_INSTALL)
	@echo "Installing user land sample exe files"
	cp -f $(SYSLINK_ROOT)/ti/syslink/lib/samples/*.exe $(PRODUCT_DIR)/$(SYSLINK_INSTALL)/
	@echo "Installing kernel and sample modules"
	cp -f $(SYSLINK_ROOT)/ti/syslink/lib/modules/$(SYSLINK_PLATFORM)/*.ko \
		 $(PRODUCT_DIR)/$(SYSLINK_INSTALL)/

syslink-kernel-clean:

	@if [ "$(BUILD_KERNEL_WITH_GCC)" = "yes" ] ; then \
		(cd $(SYSLINK_ROOT)/ti/syslink/utils/hlos/knl/Linux; \
		make ARCH=c6x CROSS_COMPILE=$(CC_GNU) SYSLINK_PLATFORM=$(SYSLINK_PLATFORM) \
		KDIR=$(KDIR) IPC_DIR=$(IPC_DIR) clean) \
	else \
		(cd $(SYSLINK_ROOT)/ti/syslink/utils/hlos/knl/Linux; \
		make ARCH=c6x CROSS_COMPILE=$(CC_SDK0) SYSLINK_PLATFORM=$(SYSLINK_PLATFORM) \
		KDIR=$(KDIR) IPC_DIR=$(IPC_DIR) clean) \
	fi
	rm -rf $(PRODUCT_DIR)/$(SYSLINK_INSTALL)/*.ko; \

syslink-user-clean:

	@echo "cleaning user syslink library"
	@if [ "$(BUILD_USERSPACE_WITH_GCC)" = "yes" ] ; then \
		(cd $(SYSLINK_ROOT)/ti/syslink/utils/hlos/usr/Linux; \
		make TOOLCHAIN_PREFIX=$(CC_GNU) SYSLINK_PLATFORM=$(SYSLINK_PLATFORM) \
		KDIR=$(KDIR) IPC_DIR=$(IPC_DIR) clean) \
	else \
		(cd $(SYSLINK_ROOT)/ti/syslink/utils/hlos/usr/Linux; \
		make TOOLCHAIN_PREFIX=$(CC_SDK) SYSLINK_PLATFORM=$(SYSLINK_PLATFORM) \
		KDIR=$(KDIR) IPC_DIR=$(IPC_DIR) clean) \
	fi

	for module_name in $(SYSLINK_USER_SAMPLES_TO_BUILD) ; do \
		echo cleaning $$module_name; \
		if [ "$(BUILD_USERSPACE_WITH_GCC)" = "yes" ] ; then \
			(cd $(SYSLINK_ROOT)/ti/syslink/samples/hlos/$$module_name/usr/Linux; \
			make TOOLCHAIN_PREFIX=$(CC_GNU) SYSLINK_PLATFORM=$(SYSLINK_PLATFORM) \
			KDIR=$(KDIR) IPC_DIR=$(IPC_DIR) clean) \
		else \
			(cd $(SYSLINK_ROOT)/ti/syslink/samples/hlos/$$module_name/usr/Linux; \
			make TOOLCHAIN_PREFIX=$(CC_SDK) SYSLINK_PLATFORM=$(SYSLINK_PLATFORM) \
			KDIR=$(KDIR) IPC_DIR=$(IPC_DIR) clean) \
		fi \
	done	
	rm -rf $(PRODUCT_DIR)/$(SYSLINK_INSTALL)/*.exe

syslink-clean:syslink-kernel-clean syslink-user-clean syslink-rtos-clean
