#!/bin/bash 
# Setup development structure
# should be run once when installed or when env vars change

set -e

MYDIR=$(pwd)
TOP_DIR=$(dirname $MYDIR)

if [ ! -e $MYDIR/setenv.example ] ; then
	echo setup must be run from its own directory
	exit 1
fi

if [ ! -e $MYDIR/setenv ] ; then
	sed "s|@TOP_DIR@|$TOP_DIR|g" <$MYDIR/setenv.example >$MYDIR/setenv
	echo Edit setenv for your configuration and rerun setup
	exit 1
fi

source setenv

# is the path to the TI compiler correct?
if [ -n "$CGT_VERSION" ] ; then
	if [ -z "$TI_CG6X_DIR" -o ! -x $TI_CG6X_DIR/bin/cg6x ] ; then
		echo TI_CG6X_DIR is \"$TI_CG6X_DIR\" and does not seem to be the TI c6x tools
		exit 1
	fi
fi
	if [ -z "$GNU_TOOLS_DIR" -o ! -x $GNU_TOOLS_DIR/bin/c6x-uclinux-gcc ] ; then
		echo GNU_TOOLS_DIR is \"$GNU_TOOLS_DIR \" and does not seem to be the GCC tools
		exit 1
	fi


# is the top level project path correct?
if [ -z "$LINUX_C6X_TOP_DIR" -o ! -e $LINUX_C6X_PROJECT_DIR/setenv.example ] ; then
	echo LINUX_C6X_TOP_DIR is \"$LINUX_C6X_PROJECT_DIR\" and does not seem to be the project top
	exit 1
fi

if [ -e $SDK0_DIR/linux-c6x-sdk0-prebuilt ] ; then
	# using prebuilt tool chain, however TI compiler may be in a different place; link it in
	if [ ! -e $SDK0_DIR/cgtools/bin -o -L $SDK0_DIR/cgtools/bin -o -L $SDK0_DIR/cgtools ] ; then
	    rm -rf $SDK0_DIR/cgtools 2>/dev/null
	    mkdir $SDK0_DIR/cgtools
	    ln -s $TI_CG6X_DIR/bin $SDK0_DIR/cgtools/bin
	else
	    echo $SDK0_DIR/cgtools appears to have a hard copy of the tools, skipping symlink
	fi
fi

echo setup is complete
